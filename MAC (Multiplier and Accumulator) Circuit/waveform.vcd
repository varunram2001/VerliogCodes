$date
	Fri Oct 13 19:17:39 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_mac_unit $end
$var wire 8 ! result [7:0] $end
$var reg 1 " clock $end
$var reg 4 # operand_a [3:0] $end
$var reg 4 $ operand_b [3:0] $end
$var reg 1 % reset $end
$scope module uut $end
$var wire 1 & clock $end
$var wire 4 ' operand_a [3:0] $end
$var wire 4 ( operand_b [3:0] $end
$var wire 1 ) reset $end
$var reg 8 * accumulator [7:0] $end
$var reg 8 + result [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx +
bx *
0)
b10 (
b101 '
0&
0%
b10 $
b101 #
0"
bx !
$end
#5
b1101 #
b1101 '
#10
b1011 $
b1011 (
#15
b0 *
1%
1)
#20
0%
0)
#30
b10001111 *
1"
1&
#35
0"
0&
